#validator texts
required.denominator1=Mianownik 1 jest wymagany
required.denominator2=Mianownik 2 jest wymagany
denominator1.zero=Mianownik 1 musi by\u0107 ró\u017Cny od zera
denominator2.zero=Mianownik 2 musi by\u0107 ró\u017Cny od zera
number2.required=Druga liczba nie mo\u017Ce by\u0107 zerem

#page texts
page.title=Kalkulator u\u0142amków zwyk\u0142ych i liczb mieszanych.
totalDesc=liczba ca\u0142kowita
numeratorDesc=licznik
denominatorDesc=mianownik
decimalPowerDesc=wyk\u0142adnik dziesi\u0119tny
operationDesc=dzia\u0142anie
resultDesc=Wynik
sendButton=Oblicz
resetButton=Wyczy\u015B\u0107

page.text1=Kalkulator u\u0142amków zwyk\u0142ych oraz liczb mieszanych.<br>Wykorzystuje klas\u0119 Fraction z pakietu rssfiz.math dost\u0119pn\u0105 na stronie: 
page.text2=Charakteryzuje si\u0119 wysok\u0105 precyzj\u0105 pod warunkiem, \u017Ce podczas oblicze\u0144 nie zostanie przekroczony rozmiar liczby typu Java&nbsp;long&nbsp;=&nbsp;(2^63), czyli&nbsp;\u00B1&nbsp;9223372036854775807.<br>W takim przypadku nast\u0105pi konwersja wyniku do liczby zmiennoprzecinkowej Java&nbsp;double i utrata precyzji. \u015Awiadczy\u0107 o tym b\u0119dzie ustawienie warto\u015Bci parametru uncertainty na&nbsp;-1&nbsp;(Fraction.UNKNOWN). Je\u015Bli wynik operacji jest dok\u0142adny, parametr uncertainty&nbsp;=&nbsp;0&nbsp;(Fraction.EXACTLY).
page.text3=Je\u015Bli jest potrzeba zachowania precyzji przy wykorzystaniu du\u017Cych liczb nale\u017Cy u\u017Cy\u0107 klasy BigFraction z tego samego pakietu. Umo\u017Cliwia ona wykonywanie oblicze\u0144 na liczbach z zakresu Java&nbsp;BigInteger,&nbsp;czyli&nbsp;2^500000000. Tutaj mo\u017Cna wypróbowa\u0107 kalkulator liczb 